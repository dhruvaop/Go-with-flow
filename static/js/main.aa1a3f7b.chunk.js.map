{"version":3,"sources":["Component/Toolbar.jsx","Component/CustomEdge.jsx","Component/Popup.jsx","Component/Navbar.jsx","Component/Toolbar2.jsx","Other Component/MainNavbar.jsx","Component/Drawing.jsx","Forms/Login.jsx","Forms/Register.jsx","Other Component/Myflowchart.jsx","Other Component/Loading.jsx","App.js","index.js"],"names":["Toolbar","useContext","drawingcontext","toolbar","settoolbar","setpopup","setshapetext","shapetext","setShapeSelected","insertrect","insertcircle","insertPara","insertRhombus","Boxbackground","shapeSelected","addedgeStyles","setBackground","BoxTextColor","setBoxTextColor","BorderColor","setBorderColor","edgeColor","setedgeColor","canvastype","canvasBg","setcanvastype","setcanvasBg","insertrectHelper","a","insertcircleHelper","insertRhombusHelper","insertParaHelper","insertTextHelper","className","onClick","type","id","name","value","onChange","e","target","CustomEdge","sourceX","sourceY","targetX","targetY","sourcePosition","targetPosition","arrowHeadType","style","data","markerEndId","getBezierPath","getMarkerEnd","fill","strokeWidth","d","cx","cy","r","stroke","Popup","insertText","useState","padding","Navbar","Toolbar2","downloadPng","elements","setElements","UserContext","projectdata","setloading","setprojectdata","nodes","useStoreState","store","save","edges","map","item","position","x","__rf","toFixed","y","nodeelement","push","console","log","newelement","JSON","stringify","axios","patch","_id","marginRight","MainNavbar","user","projectname","history","useHistory","logout","localStorage","setItem","err","to","color","createContext","projectId","setprojectId","popup","setcurrSelected","document","getElementsByClassName","htmlToImage","getElementById","quality","then","dataUrl","link","createElement","download","href","click","loadMyProject","get","getItem","newdata","parse","projectData","newelements","length","bgcolor","brcolor","txtcolor","useEffect","animated","nodeTypes","rectangle","isConnectable","customNodeStylesRectangle","background","borderRadius","border","text","circle","customNodeStylesCircle","parallelogram","customNodeStylesParallelogram","transform","rhombus","customNodeStylesRhombus","textAlign","height","width","display","alignItems","justifyContent","left","textfield","customNodeStylesTextField","idnumber","concat","edgeTypes","custom","active","Provider","onElementsRemove","elementsToRemove","els","removeElements","onConnect","params","addEdge","deleteKeyCode","variant","gap","size","Login","setuser","setuserexist","error","email","setemail","password","setpassword","submit","preventDefault","fetch","method","headers","body","result","json","user_dettails","status","window","alert","src","alt","autoComplete","Register","seterror","setname","cpassword","setcpassword","res","message","setprojectname","createNewProject","post","ProjectCards","openProject","deleteProject","confirm","delete","class","Myflowchart","loading","UserProjects","setUserProjects","userAuth","output","output2","Error","projects","textTransform","Loading","backgroundColor","defaults","App","userexist","exact","path","component","Drawing","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.aa1a3f7b.chunk.js","sourcesContent":["import React, { useContext } from 'react'\nimport \"../Component/style.css\"\nimport { drawingcontext } from './Drawing'\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport { useState } from 'react';\n\nfunction Toolbar() {\n    //Toolbar State\n    const { toolbar, settoolbar,setshapetext, shapetext, setpopup, insertrect, insertcircle, insertPara, insertRhombus, setShapeSelected, shapeSelected, addedgeStyles, Boxbackground, setBackground, BoxTextColor, setBoxTextColor, BorderColor, setBorderColor, edgeColor, setedgeColor, canvastype, canvasBg, setcanvastype, setcanvasBg, } = useContext(drawingcontext);\n    const insertrectHelper = async () => {\n        await setShapeSelected('rectangle');\n        setpopup(true);\n    }\n    const insertcircleHelper = async () => {\n        await setShapeSelected('circle');\n        setpopup(true);\n    }\n    const insertRhombusHelper = async () => {\n        await setShapeSelected('rhombus');\n        setpopup(true);\n    }\n    const insertParaHelper = async () => {\n        await setShapeSelected('parallelogram');\n        setpopup(true);\n    }\n    const insertTextHelper = async () => {\n        await setShapeSelected('textfield')\n        setpopup(true);\n    }\n    return (\n        <>\n            <button className=\"arrow_inside_button\" onClick={() => settoolbar(!toolbar)} > <ArrowBackIosIcon /> </button>\n            <div className={toolbar === true ? 'toolbar' : 'd_none'}>\n                <h6 className=\"shape_heading\">Shapes</h6>\n                <div className=\"selection_board\">\n\n                    <div className=\"shapes\">\n                        <div className=\"shape rectangle\" onClick={insertrectHelper}></div>\n                        <div className=\"shape ellipse\" onClick={insertcircleHelper}></div>\n                        <div className=\"shape rhombus\" onClick={insertRhombusHelper}></div>\n                        <div className=\"shape parallelogram\" onClick={insertParaHelper}></div>\n                        <div className=\"shape text\" onClick={insertTextHelper}>Text</div>\n                    </div>\n                </div>\n                <h6 className=\"shape_heading\">Customize the Color</h6>\n                <div className=\"selection_board\">\n                    <div className=\"color_options\">\n                        <h4>Node Background</h4>\n                        <input type=\"color\" id=\"head\" name=\"head\" value={Boxbackground} onChange={(e) => { setBackground(e.target.value) }}></input>\n                    </div>\n                    <div className=\"color_options\">\n                        <h4>Node Text</h4>\n                        <input type=\"color\" id=\"head\" name=\"head\" value={BoxTextColor} onChange={(e) => { setBoxTextColor(e.target.value) }}></input>\n                    </div>\n                    <div className=\"color_options\">\n                        <h4>Node Border</h4>\n                        <input type=\"color\" id=\"head\" name=\"head\" value={BorderColor} onChange={(e) => { setBorderColor(e.target.value) }}></input>\n\n                    </div>\n                    <div className=\"color_options\">\n                        <h4>Edge Color</h4>\n                        <input type=\"color\" id=\"head\" name=\"head\" value={edgeColor} onChange={(e) => { setedgeColor(e.target.value) }}></input>\n                    </div>\n                </div>\n                <h6 className=\"shape_heading\">Customize the Canvas</h6>\n                <div className=\"selection_board\">\n                    <div className=\"color_options\">\n                        <h4>Background</h4>\n                        <input type=\"color\" id=\"head\" name=\"head\" value={canvasBg} onChange={e => setcanvasBg(e.target.value)} ></input>\n                    </div>\n                    <div className=\"color_options\">\n                        <h4>Variant</h4>\n                        <select name=\"\" value={canvastype} onChange={e => setcanvastype(e.target.value)} >\n                            <option value=\"lines\">Line</option>\n                            <option value=\"dots\">dots</option>\n                        </select>\n                    </div>\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default Toolbar\n","import React from 'react';\nimport { getBezierPath, getMarkerEnd } from 'react-flow-renderer';\n\nexport default function CustomEdge({\n  id,\n  sourceX,\n  sourceY,\n  targetX,\n  targetY,\n  sourcePosition,\n  targetPosition,\n  style = {},\n  data,\n  arrowHeadType,\n  markerEndId,\n}) {\n  const edgePath = getBezierPath({ sourceX, sourceY, sourcePosition, targetX, targetY, targetPosition });\n  const markerEnd = getMarkerEnd(arrowHeadType, markerEndId);\n\n  return (\n    <>\n      {/* <path id={id} style={style} className=\"react-flow__edge-path\" d={edgePath} markerEnd={markerEnd} />\n      <text>\n        <textPath href={`#${id}`} style={{ fontSize: '12px' }} startOffset=\"50%\" textAnchor=\"middle\">\n          {data.text}\n        </textPath>\n      </text> */}\n      <g>\n      <path\n        fill=\"none\"\n        strokeWidth={1.5}\n        className=\"animated\"\n        d={`M${sourceX},${sourceY} C ${sourceX} ${targetY} ${sourceX} ${targetY} ${targetX},${targetY}`}\n      />\n      <circle cx={targetX} cy={targetY} fill=\"#fff\" r={3} stroke=\"#222\" strokeWidth={1.5} />\n    </g>\n    </>\n  );\n}","import React from 'react'\nimport { useContext } from 'react'\nimport { drawingcontext } from './Drawing'\nimport './style.css'\nimport { TwitterPicker } from 'react-color'\nimport { useState } from 'react'\n\nfunction Popup() {\n    const { setshapetext, shapetext, setpopup, insertrect, insertcircle, insertPara, insertRhombus, setShapeSelected, shapeSelected, insertText, Boxbackground,setBackground,BoxTextColor,setBoxTextColor,BorderColor, setBorderColor } = useContext(drawingcontext);\n    const helper = () => {\n        switch (shapeSelected) {\n            case 'rectangle': {\n                setpopup(false);\n                setshapetext('Text')\n                insertrect();\n            }\n                break;\n            case 'circle': {\n                setpopup(false);\n                setshapetext('Text')\n                insertcircle();\n            }\n                break;\n            case 'rhombus': {\n                setpopup(false);\n                setshapetext('Text')\n                insertRhombus();\n            }\n                break;\n            case 'parallelogram': {\n                setpopup(false);\n                setshapetext('Text')\n                insertPara();\n            }\n                break;\n            case 'textfield': {\n                setpopup(false);\n                setshapetext('Text')\n                insertText();\n            }\n        }\n        setpopup(false);\n    }\n    // Color Picker\n    const [currentColor, setCurrentcolor] = useState('#fff');\n    const handleChangeComplete = (color) => {\n        setCurrentcolor(color.hex);\n    }\n    return (\n        <div id=\"popup_message\">\n            <div className=\"take_input_popup\">\n                <button className=\"button1 crossButton\" onClick={() => setpopup(false)}>x</button>\n                <div className=\"input_field\">\n                    <h3>Node Input</h3>\n                    <input type=\"text\" value={shapetext} onChange={(e) => setshapetext(e.target.value)} style={{padding:'10px 15px'}} />\n                </div>\n                <button className=\"button1\" onClick={helper}>Insert</button>\n            </div>\n        </div>\n    )\n}\n\nexport default Popup\n","import React,{useState , useContext} from 'react'\nimport { navbarContext } from './Drawing';\n\nfunction Navbar() {\n    const [fontstyle,setfontstyle] = useState();\n    const {Boxbackground,setBackground,BoxTextColor,setBoxTextColor,BorderColor, setBorderColor, edgeColor, setedgeColor} = useContext(navbarContext);\n    return (\n        <div className=\"navbar\">\n            <select name=\"\" value={fontstyle} onChange={e => setfontstyle(e.target.value)} >\n                <option style={{ fontFamily: 'Indie Flower,cursive' }} value=\"Indie Flower,cursive\">Indie Flower</option>\n                <option style={{ fontFamily: 'Caveat, cursive' }} value=\"Caveat, cursive\">Caveat</option>\n                <option style={{ fontFamily: 'Shadows Into Light, cursive' }} value=\"Shadows Into Light\">Shadows Into Light</option>\n                <option style={{ fontFamily: 'Homemade Apple' }} value=\"Homemade Apple\">Homemade Apple</option>\n                <option style={{ fontFamily: 'Nanum Pen Script' }} value=\"Nanum Pen Script\">Nanum Pen Script</option>\n                <option style={{ fontFamily: 'Kalam' }} value=\"Kalam\">Kalam</option>\n            </select>\n            \n            <h4>Background Color:</h4>\n            <input type=\"color\" id=\"head\" name=\"head\" value={Boxbackground} onChange={(e)=>{setBackground(e.target.value)}}></input>\n            <h4>Text Color:</h4>\n            <input type=\"color\" id=\"head\" name=\"head\" value={BoxTextColor} onChange={(e)=>{setBoxTextColor(e.target.value)}}></input>\n            <h4>Border Color:</h4>\n            <input type=\"color\" id=\"head\" name=\"head\" value={BorderColor} onChange={(e)=>{setBorderColor(e.target.value)}}></input>\n            <h4>Edge Color:</h4>\n            <input type=\"color\" id=\"head\" name=\"head\" value={edgeColor} onChange={(e)=>{setedgeColor(e.target.value)}}></input>\n        </div>\n\n    )\n}\n\nexport default Navbar\n","import React from 'react'\nimport { useState, useContext } from 'react'\nimport \"../Component/style.css\"\nimport { drawingcontext } from './Drawing'\nimport axios from \"axios\";\nimport { UserContext } from \"../App.js\"\nimport { useStoreState, useStoreActions } from 'react-flow-renderer';\n\nfunction Toolbar2() {\n    const { canvastype, canvasBg, setcanvastype, setcanvasBg, downloadPng, elements, setElements } = useContext(drawingcontext);\n    const { projectdata, setprojectdata, setloading } = useContext(UserContext)\n    const nodes = useStoreState((store) => store.nodes);\n    const edge = useStoreState((store)=> store.edges )\n    const save = async () => {\n        setloading(true);\n        const nodeelement = await nodes.map((item) => ({ ...item, position: { x: item.__rf.position.x.toFixed(2), y: item.__rf.position.y.toFixed(2) } }\n        ))\n        const edgeelement = await elements.map((item)=>(item.type !== 'rectangle' && item.type !== 'circle' && item.type !== 'rhombus' && item.type !== 'parallelogram' && item.type !== 'textfield')?(\n            nodeelement.push(item)\n        ):{})\n        console.log(nodeelement);\n        console.log(nodeelement);\n        const newelement = JSON.stringify(nodeelement);\n        const output = await axios.patch(`https://go-with-flow.herokuapp.com/saveMyProject/${projectdata[0]._id}`, { elements: newelement });\n        setloading(false);\n    }\n    return (\n        <div className=\"toolbar_2\">\n            <div className=\"selection_board\">\n                <button className=\"button1\" style={{ marginRight: '1rem' }} onClick={save}>Save</button>\n                <button className=\"button1\" onClick={downloadPng}>Download</button>\n            </div>\n        </div>\n    )\n}\n\nexport default Toolbar2\n","import React, { useContext, useState } from 'react'\nimport \"./style.css\"\nimport axios from \"axios\";\nimport {UserContext} from \"../App.js\"\nimport { useHistory , Link} from 'react-router-dom';\nfunction MainNavbar() {\n    const [active,setactive] = useState('myCharts');\n    const {user,projectname} = useContext(UserContext);\n    const history = useHistory();\n    const logout = async () => {\n        try {\n            history.push('/login')\n            localStorage.setItem('user',null);\n            localStorage.setItem('projectId',null);\n            localStorage.setItem('projectDetails',null);\n            localStorage.setItem('projectName',null);\n           \n        }\n        catch (err) {\n            console.log(err);\n            history.push('/login');\n        }\n    }\n    return (\n        <div className=\"main_navbar\">\n            <div className=\"middle\">\n                    <h3  ><Link to=\"/myflowcharts\" style={{color: 'white'}}>My Flowcharts</Link></h3>\n            </div>\n            <div className=\"left\">\n                <center><h3> Go With Flow</h3></center>\n            </div>\n            \n            <div className=\"right\">\n                <h3>{user.name} | {projectname}</h3>\n                <button className=\"button1 color-secondary\" onClick={logout}  >Logout</button>\n            </div>\n        </div>\n    )\n}\n\nexport default MainNavbar\n","//Imports\nimport React, { useState, useContext } from 'react';\nimport ReactFlow, { ReactFlowProvider, addEdge, removeElements, Controls } from 'react-flow-renderer';\nimport { Background, Handle } from 'react-flow-renderer';\nimport Toolbar from './Toolbar';\nimport \"../Component/style.css\"\nimport { createContext } from 'react';\nimport CustomEdge from './CustomEdge';\nimport Popup from './Popup';\nimport { useEffect } from 'react';\nimport Navbar from './Navbar';\nimport Toolbar2 from './Toolbar2';\nimport * as htmlToImage from 'html-to-image';\nimport { toPng, toJpeg, toBlob, toPixelData, toSvg } from 'html-to-image';\nimport axios from \"axios\"\nimport { useHistory } from 'react-router';\nimport MainNavbar from '../Other Component/MainNavbar';\nimport { UserContext } from '../App'\n// Drawing context\nconst drawingcontext = createContext(null);\nexport { drawingcontext };\n\n// Navbar Context\nconst navbarContext = createContext(null);\nexport { navbarContext }\n\n// elements\n//functional Code\n\nexport default () => {\n    // States\n    const { user, projectname, projectdata, setloading, setprojectdata, projectId,setprojectId } = useContext(UserContext)\n    const history = useHistory()\n    const [elements, setElements] = useState([]);\n    const [popup, setpopup] = useState(false);\n    const [shapetext, setshapetext] = useState('Text');\n    const [shapeSelected, setShapeSelected] = useState('');\n    const [currSelected, setcurrSelected] = useState(null);\n    const onElementsRemove = (elementsToRemove) =>\n        setElements((els) => removeElements(elementsToRemove, els));\n    const onConnect = (params) => setElements((els) => addEdge(params, els));\n\n    // Navbar Properties\n    const [Boxbackground, setBackground] = useState('rgb(156, 168, 179)');\n    const [BoxTextColor, setBoxTextColor] = useState('rgb(255, 255, 255)');\n    const [BorderColor, setBorderColor] = useState('black');\n    const [edgeColor, setedgeColor] = useState('black');\n    const [toolbar, settoolbar] = useState(true);\n    const [canvastype, setcanvastype] = useState('dots');\n    const [canvasBg, setcanvasBg] = useState(\"white\");\n\n    async function downloadPng() {\n        setloading(true)\n        document.getElementsByClassName('handle_button').className = \"handle_none\";\n        const download = await htmlToImage.toJpeg(document.getElementById('flow_chart'), { quality: 1 })\n            .then(function (dataUrl) {\n                var link = document.createElement('a');\n                link.download = `${projectname}_flowchart.jpeg`;\n                link.href = dataUrl;\n                link.click();\n            });\n        setloading(false);\n    }\n    // UseEffects\n    const loadMyProject = async () => {\n        console.log(projectId);\n        const newdata = await axios.get(`https://go-with-flow.herokuapp.com/flowchart/${localStorage.getItem('projectId')}`);\n        const data = await newdata.data;\n        await setElements(JSON.parse(data.projectData[0].elements));\n        const newelements = JSON.parse(data.projectData[0].elements);\n        if(newelements.length === 0 )return;\n        setBackground(newelements[0].data.bgcolor);\n        setBorderColor(newelements[0].data.brcolor);\n        setBoxTextColor(newelements[0].data.txtcolor);\n    }\n    useEffect(() => {\n        loadMyProject();\n    }, [])\n    useEffect(() => {\n        const newelements = elements.map((item) => (\n            { ...item, data: { ...item.data, txtcolor: BoxTextColor, bgcolor: Boxbackground, brcolor: BorderColor } }\n        ))\n        setElements(newelements);\n    }, [BoxTextColor, Boxbackground, BorderColor])\n    useEffect(() => {\n        const newelements = elements.map((item) => ((item.type !== 'rectangle' && item.type !== 'circle' && item.type !== 'rhombus' && item.type !== 'parallelogram' && item.type !== 'textfield')\n            ? { ...item, style: { ...item.style, stroke: edgeColor } }\n            : { ...item }\n        ))\n        setElements(newelements);\n    }, [edgeColor])\n    const addedgeStyles = async () => {\n        const newelements = await elements.map((item) => ((item.type !== 'rectangle' && item.type !== 'circle' && item.type !== 'rhombus' && item.type !== 'parallelogram' && item.type !== 'textfield')\n            ? { ...item, arrowHeadType: 'arrowclosed', type: 'smoothstep', animated: true, style: { ...item.style, stroke: edgeColor } }\n            : { ...item }\n        ))\n        setElements(newelements);\n    }\n    useEffect(() => {\n        addedgeStyles();\n    }, [elements.length])\n\n    // making text field start\n    const CustomNodeComponentTextField = ({ data }) => {\n        const customNodeStylesTextField = {\n            background: 'transparent',\n            color: data.txtcolor,\n            padding: '1rem',\n            borderRadius: '2px'\n        };\n        return (\n            <div style={customNodeStylesTextField} onClick={() => setcurrSelected(data.id)}>\n                <div>{data.text}</div>\n            </div>\n        )\n    }\n    // making text field ends\n    // making rectangle shape starts    \n\n    const CustomNodeComponentRectangle = ({ data, isConnectable }) => {\n        const customNodeStylesRectangle = {\n            background: data.bgcolor,\n            color: data.txtcolor,\n            padding: '1rem',\n            borderRadius: '2px',\n            border: `1px solid ${data.brcolor}`\n        };\n        return (\n            <div style={customNodeStylesRectangle} onClick={() => setcurrSelected(data.id)}  >\n                <Handle type=\"target\" position=\"top\" style={{ borderRadius: 0 }} isConnectable={isConnectable} />\n                <Handle type=\"source\" id=\"a\" position=\"left\" style={{ borderRadius: 0 }} isConnectable={isConnectable} />\n                <div>{data.text}</div>\n                <Handle type=\"source\" id=\"b\" position=\"right\" style={{ borderRadius: 0 }} isConnectable={isConnectable} />\n                <Handle type=\"source\" id=\"c\" position=\"bottom\" style={{ borderRadius: 0 }} isConnectable={isConnectable} />\n            </div>\n        );\n    };\n    // making rectangle shape ends\n    // making circle shape start\n\n    const CustomNodeComponentCircle = ({ data }) => {\n        const customNodeStylesCircle = {\n            background: data.bgcolor,\n            color: data.txtcolor,\n            padding: '1rem',\n            borderRadius: '50%',\n            border: `1px solid ${data.brcolor}`\n        };\n        return (\n            <div style={customNodeStylesCircle} onClick={() => setcurrSelected(data.id)}>\n                <Handle type=\"target\" position=\"top\" style={{ borderRadius: 0 }} />\n                <div>{data.text}</div>\n                <Handle\n                    type=\"source\"\n                    position=\"bottom\"\n                    id=\"a\"\n                />\n            </div>\n        );\n    };\n    //end circle type shape\n    // rhombus shape making start\n\n    const CustomNodeComponentRhombus = ({ data, isConnectable }) => {\n        const textRhombus = {\n            transform: 'rotate(-45deg)'\n        }\n        const customNodeStylesRhombus = {\n            background: data.bgcolor,\n            color: data.txtcolor,\n            textAlign: 'center',\n            height: '5rem',\n            width: '5rem',\n            display: 'flex',\n            alignItems: 'center',\n            transform: 'rotate(45deg)',\n            justifyContent: 'center',\n            border: `1px solid ${data.brcolor}`\n        }\n        return (\n            <div style={customNodeStylesRhombus} onClick={() => setcurrSelected(data.id)}>\n                <Handle type=\"target\" position=\"top\" style={{ borderRadius: 0, position: 'absolute', left: '0' }} isConnectable={isConnectable} />\n                <Handle type=\"source\" id=\"a\" position=\"left\" style={{ borderRadius: 0, borderRadius: 0, position: 'absolute', top: '100%' }} isConnectable={isConnectable} />\n                <div style={textRhombus}>{data.text}</div>\n                <Handle type=\"source\" id=\"b\" position=\"right\" style={{ borderRadius: 0, borderRadius: 0, position: 'absolute', top: '0%' }} isConnectable={isConnectable} />\n                <Handle type=\"source\" id=\"c\" position=\"bottom\" style={{ borderRadius: 0, borderRadius: 0, position: 'absolute', left: '100%' }} isConnectable={isConnectable} />\n            </div>\n        );\n    };\n    // rhombus shape making ends\n    // parallelogram shape making start\n    const CustomNodeComponentParallelogram = ({ data, isConnectable }) => {\n        const textparallelogram = {\n            transform: 'skew(-20deg)'\n        }\n        const customNodeStylesParallelogram = {\n            background: data.bgcolor,\n            color: data.txtcolor,\n            padding: '10px 30px',\n            borderRadius: '2px',\n            transform: 'skew(20deg)',\n            border: `1px solid ${data.brcolor}`\n        }\n        return (\n            <div style={customNodeStylesParallelogram} onClick={() => setcurrSelected(data.id)}>\n                <Handle type=\"target\" className=\"handle_button\" position=\"top\" style={{ borderRadius: 0, transform: 'skew(-20deg)' }} isConnectable={isConnectable} />\n                <Handle type=\"source\" className=\"handle_button\" id=\"a\" position=\"left\" style={{ borderRadius: 0, transform: 'skew(-20deg)' }} isConnectable={isConnectable} />\n                <div style={textparallelogram}>{data.text}</div>\n                <Handle type=\"source\" id=\"b\" position=\"right\" className=\"handle_button\" style={{ borderRadius: 0, transform: 'skew(-20deg)' }} isConnectable={isConnectable} />\n                <Handle type=\"source\" id=\"c\" position=\"bottom\" className=\"handle_button\" style={{ borderRadius: 0, transform: 'skew(-20deg)' }} isConnectable={isConnectable} />\n            </div>\n        );\n    };\n    // parallelogram shape making ends\n    // Custom Nodes\n    const nodeTypes = {\n        rectangle: CustomNodeComponentRectangle,\n        circle: CustomNodeComponentCircle,\n        parallelogram: CustomNodeComponentParallelogram,\n        rhombus: CustomNodeComponentRhombus,\n        textfield: CustomNodeComponentTextField\n    };\n    // Shape Making Functions\n    // text field\n    const insertText = () => {\n        const idnumber = elements.length;\n        const newelement = elements.concat(\n            {\n                id: `${idnumber + 1}`,\n                type: 'textfield',\n                data: { text: shapetext, id: `${idnumber + 1}`, txtcolor: BoxTextColor },\n                position: { x: 450, y: 300 }\n            }\n        )\n        setElements(newelement);\n    }\n    // Rectangle\n    const insertrect = () => {\n        const idnumber = elements.length;\n        const newelement = elements.concat(\n            {\n                id: `${idnumber + 1}`,\n                type: 'rectangle',\n                data: { text: shapetext, id: `${idnumber + 1}`, bgcolor: Boxbackground, txtcolor: BoxTextColor, brcolor: BorderColor },\n                position: { x: 450, y: 300 },\n                arrowHeadType: 'arrowclosed'\n            }\n        );\n        setElements(newelement);\n    }\n    // Circle\n    const insertcircle = () => {\n        setpopup(true);\n        const idnumber = elements.length;\n        const newelement = elements.concat(\n            {\n                id: `${idnumber + 1}`,\n                type: 'circle',\n                data: { text: shapetext, id: `${idnumber + 1}`, bgcolor: Boxbackground, txtcolor: BoxTextColor, brcolor: BorderColor },\n                position: { x: 450, y: 300 },\n                arrowHeadType: 'arrowclosed'\n            }\n        );\n        setElements(newelement);\n    }\n    // Parallelogram\n    const insertPara = () => {\n        setpopup(true);\n        const idnumber = elements.length;\n        const newelement = elements.concat(\n            {\n                id: `${idnumber + 1}`,\n                type: 'parallelogram',\n                data: { text: shapetext, id: `${idnumber + 1}`, bgcolor: Boxbackground, txtcolor: BoxTextColor, brcolor: BorderColor },\n                position: { x: 450, y: 300 },\n                arrowHeadType: 'arrowclosed'\n            }\n        )\n        setElements(newelement);\n    }\n    // Rhombus\n    const insertRhombus = async () => {\n        const idnumber = await elements.length;\n        const newelement = await elements.concat(\n            {\n                id: `${idnumber + 1}`,\n                type: 'rhombus',\n                data: { text: shapetext, id: `${idnumber + 1}`, bgcolor: Boxbackground, txtcolor: BoxTextColor, brcolor: BorderColor },\n                position: { x: 450, y: 300 },\n                arrowHeadType: 'arrowclosed'\n            }\n        )\n        setElements(newelement);\n    }\n    const edgeTypes = {\n        custom: CustomEdge,\n    };\n    return (\n        <>\n            <MainNavbar active=\"Simulator\" />\n            <drawingcontext.Provider value={{ insertrect, insertcircle, insertPara, insertRhombus, setpopup, setshapetext, setShapeSelected, shapeSelected, addedgeStyles, insertText, setBackground, Boxbackground, setBackground, BoxTextColor, setBoxTextColor, BorderColor, setBorderColor, edgeColor, setedgeColor, canvastype, canvasBg, setcanvastype, setcanvasBg, downloadPng, toolbar, settoolbar, elements, setElements }} >\n                {\n                    popup === false ? null :\n                        <Popup />\n                }\n                <div className=\"main_container\">\n                    <Toolbar />\n                    <ReactFlowProvider>\n                        <div className=\"flow_chart_canvas\" style={{ background: `${canvasBg}` }} id=\"flow_chart\" >\n                            <ReactFlow\n                                elements={elements}\n                                onElementsRemove={onElementsRemove}\n                                onConnect={onConnect}\n                                deleteKeyCode={46}\n                                nodeTypes={nodeTypes}\n                                edgeTypes={edgeTypes}\n                            >\n                                <Background\n                                    variant={canvastype}\n                                    gap={25}\n                                    size={1}\n                                    color=\"gray\"\n\n                                >\n                                    <Controls />\n                                </Background>\n                            </ReactFlow>\n                        </div>\n                        <Toolbar2 />\n                    </ReactFlowProvider>\n                    \n                </div>\n            </drawingcontext.Provider>\n        </>\n    );\n};","import React,{useState,useContext} from 'react'\nimport \"./style.css\"\nimport {Link} from \"react-router-dom\"\nimport {useHistory} from \"react-router-dom\"\nimport axios from \"axios\"\nimport {UserContext} from \"../App.js\"\nfunction Login() {\n    const {user,setuser, setuserexist } = useContext(UserContext)\n    const history = useHistory();\n    const [error, seterror] = useState();\n    const [email, setemail] = useState();\n    const [password, setpassword] = useState();\n\n    const [jwt,setjwt] = useState(null);\n    const submit = async(e) =>{\n        e.preventDefault();\n        const result = await fetch(\"https://go-with-flow.herokuapp.com/login\", {\n            method: 'POST',\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                email, password\n            })\n        })\n        let user_dettails = await result.json();\n        console.log(user_dettails.user);\n        if(result.status != 200){\n            console.log(\"Errorvfni\");\n            window.alert(\"Unauthorized User!\");\n        }\n        else {\n            await setuser(user_dettails.user);\n            localStorage.setItem('user', JSON.stringify(user_dettails.user));\n            localStorage.setItem('userexist',true)\n            await setuserexist(true);\n            window.alert('Welcome to Go with Flow!');\n            history.push('/');\n        }\n    }\n    return (\n        <div className=\"login\">\n            <div className=\"container-lr\">\n                <div className=\"left\">\n                    <h3 className=\"heading\">Go With Flow</h3>\n                    <img src=\"https://cdn.dribbble.com/users/14268/screenshots/6410271/k.png?compress=1&resize=400x300\" alt=\"\" />\n                    <p className=\"para\">Make your algorithm, website or any flowchart, save it in a project and download!</p><br />\n                    <p className=\"para\">As Simple as that!</p><br />\n                </div>\n                <div className=\"right\">\n                    <h3>Welcome</h3>\n                    <h4>Login to your account</h4>\n                    <div className=\"input_container\">\n                    <div className=\"input-field\">\n                        <h4>Username</h4>\n                        <input type=\"text\" autoComplete=\"true\" value={email} onChange={e => setemail(e.target.value)} />\n                    </div>\n                    <div className=\"input-field\">\n                        <h4>Password</h4>\n                        <input type=\"password\" value={password} onChange={e => setpassword(e.target.value)} />\n                    </div>\n                    </div>\n                    <button className=\"button-1\" onClick={submit}>Login</button>\n                    <span className=\"message-log\">{error}</span>\n                    <span className=\"message-log\">Not Register? <Link to=\"/register\">Register</Link></span>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Login\n","import React, { useState } from 'react'\nimport \"./style.css\"\nimport { Link, useHistory } from \"react-router-dom\"\nimport axios from \"axios\"\nfunction Register() {\n    const history = useHistory();\n\n    const [error, seterror] = useState();\n    const [name, setname] = useState();\n    const [email, setemail] = useState();\n    const [password, setpassword] = useState();\n    const [cpassword, setcpassword] = useState();\n    // history.p\n\n    const submit = async (e) => {\n        e.preventDefault();\n        const result = await fetch(\"https://go-with-flow.herokuapp.com/register\", {\n            method: 'POST',\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                name, email, password, cpassword\n            })\n        })\n        if (result.status === 201) {\n            history.push('/login');\n            window.alert('Registered Succesfully!!!');\n        }\n        else {\n            const res = await result.json();\n            seterror(res.message);\n            window.alert('Error, try again')\n        }\n    }\n    return (\n        <div className=\"login\">\n            <div className=\"container-lr\">\n                <div className=\"left\">\n                    <h3 className=\"heading\">Go With Flow</h3>\n                    <img src=\"https://cdn.dribbble.com/users/14268/screenshots/6410271/k.png?compress=1&resize=400x300\" alt=\"\" />\n                    <p className=\"para\">Make your algorithm, website or any flowchart, save it in a project and download!</p><br />\n                    <p className=\"para\">As Simple as that!</p><br />\n                </div>\n                <div className=\"right\">\n                    <h3>Welcome</h3>\n                    <h4>Login to your account</h4>\n                    <div className=\"input_container\">\n                        <div className=\"input-field\">\n                            <h4>Name</h4>\n                            <input type=\"text\" value={name} onChange={e => setname(e.target.value)} />\n                        </div>\n                        <div className=\"input-field\">\n                            <h4>Email</h4>\n                            <input type=\"text\" value={email} autoComplete=\"false\" onChange={e => setemail(e.target.value)} />\n                        </div>\n                        <div className=\"input-field\">\n                            <h4>Password</h4>\n                            <input type=\"password\" value={password} autoComplete=\"false\" onChange={e => setpassword(e.target.value)} />\n                        </div>\n                        <div className=\"input-field\">\n                            <h4>Confirm Password</h4>\n                            <input type=\"password\" value={cpassword} onChange={e => setcpassword(e.target.value)} />\n                        </div>\n                    </div>\n                    <button className=\"button-1\" onClick={submit}>Signup</button>\n                    <span className=\"message-log\">{error}</span>\n                    <span className=\"message-log\">Already have account? <Link to=\"/login\">Login</Link></span>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Register\n","import React, { useContext, useEffect, useState } from 'react'\nimport \"./style2.css\"\nimport MainNavbar from './MainNavbar'\nimport axios from \"axios\"\nimport { useHistory } from \"react-router-dom\"\nimport { UserContext } from '../App'\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nconst Popup = ({ setpopup }) => {\n\n    const history = useHistory();\n    const { user, projectname, setprojectname } = useContext(UserContext);\n    const createNewProject = async (e) => {\n        e.preventDefault();\n\n        const newproject = await axios.post(\"https://go-with-flow.herokuapp.com/createNewProject\", { email: user.email, projectname: projectname, elements: \"[]\" });\n        setpopup(false);\n    }\n    return (\n        <div id=\"popup_message\">\n            <div className=\"take_input_popup\">\n                <button className=\"button1 crossButton\" onClick={() => setpopup(false)}>x</button>\n                <div className=\"input_field\">\n                    <h3>Project Name</h3>\n                    <input type=\"text\" onChange={(e) => setprojectname(e.target.value)} style={{ padding: '10px 15px' }} />\n                </div>\n                <button className=\"button1\" onClick={createNewProject} >Create</button>\n            </div>\n        </div>\n    )\n}\nconst ProjectCards = ({ item }) => {\n    const history = useHistory();\n    const {user, projectname, setprojectname, projectdata, setprojectdata , projectId,setprojectId} = useContext(UserContext);\n    const openProject = async (e) => {\n        e.preventDefault();\n        const newdata = await axios.get(`https://go-with-flow.herokuapp.com/flowchart/${item._id}`);\n        // setprojectdata()\n        const data = await newdata.data;\n        await setprojectdata(data.projectData);\n        await localStorage.setItem('projectId',data.projectData[0]._id);\n        await localStorage.setItem('projectDetails',JSON.stringify(data.projectData))\n        await localStorage.setItem('projectName',data.projectData[0].projectname);\n        await setprojectId(data.projectData[0]._id);\n        await setprojectname(data.projectData[0].projectname);\n        history.push(`/flowchart/${item.projectname}`);\n    }\n    const deleteProject = async () => {\n        const output = await window.confirm('Are you sure');\n        if(!output)return;\n        const data = await axios.delete(`https://go-with-flow.herokuapp.com/flowchart/${item._id}`);\n        console.log(data);\n    }\n    return (<div style={{position: 'relative'}}>\n        <div className=\"projectcard\" onClick={openProject} >\n            <h3 className=\"title-heading\">{item.projectname}</h3>\n        </div>\n        <DeleteIcon onClick={deleteProject} class=\"delete-icon\" />\n    </div>\n    )\n}\nfunction Myflowchart() {\n    const { user, projectname, setprojectname, loading,setloading } = useContext(UserContext);\n    const [popup, setpopup] = useState(false);\n    const history = useHistory();\n    const [UserProjects, setUserProjects] = useState([]);\n    const userAuth = async () => {\n        \n        try {\n            const output = await axios.get(`https://go-with-flow.herokuapp.com/getMyFlowcharts/${user.email}`);\n            const output2 = await output.data;\n            \n            if (output.status !== 200) {\n                throw new Error;\n            }\n            setUserProjects(output2.projects)\n            \n        }\n        catch (err) {\n            console.log(err);\n            history.push('/login');\n        }\n        \n    }\n    useEffect(() => {\n        userAuth();\n    })\n\n    return (\n        <div>\n            {popup === true ? <Popup setpopup={setpopup} /> : null}\n            <MainNavbar />\n            <div className=\"container-w100\">\n                <div className=\"projects\">\n                    <center><h1 className=\"title-heading\" style={{color: 'black', textTransform: 'uppercase'}} >My FlowCharts</h1></center>\n                    <div className=\"wrapper\">\n                        <div className=\"projectcard add-project\" onClick={() => setpopup(true)} >\n                            <span className=\"title-heading\">+</span>\n                            <h3 className=\"title-heading\">Create new project</h3>\n                        </div>\n\n                        {\n                            UserProjects.map((item) => (\n                                <ProjectCards item={item} />\n                            ))\n                        }\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Myflowchart\n","import React from 'react'\nimport \"./loading.css\"\nfunction Loading() {\n    return (\n        <div style={{position:'absolute', width: '100%', height: '100%', backgroundColor: 'rgba(0,0,0,0.2)'}} >\n            <div class=\"loadingwrapper\">\n                <div class=\"circle\"></div>\n                <div class=\"circle\"></div>\n                <div class=\"circle\"></div>\n                <div class=\"shadow\"></div>\n                <div class=\"shadow\"></div>\n                <div class=\"shadow\"></div>\n            </div>\n        </div>\n    )\n}\n\nexport default Loading\n","import './App.css';\nimport Drawing from './Component/Drawing';\nimport Login from \"./Forms/Login\";\nimport Register from \"./Forms/Register\"\nimport { HashRouter as Router, Route, Link, Switch, useHistory, Redirect } from 'react-router-dom';\nimport Navbar from \"./Other Component/MainNavbar\";\nimport { createContext, useEffect, useState } from 'react';\nimport Myflowchart from './Other Component/Myflowchart';\nimport axios from \"axios\"\nimport Loading from './Other Component/Loading';\naxios.defaults.headers.post['Content-Type'] = 'application/json;charset=utf-8';\naxios.defaults.headers.post['Access-Control-Allow-Origin'] = '*';\nconst UserContext = createContext(null);\nexport { UserContext }\nconst App = () => {\n  let history = useHistory();\n  const [user, setuser] = useState([]);\n  const [userexist, setuserexist] = useState(false);\n  const [projectname, setprojectname] = useState(\"\");\n  const [projectdata, setprojectdata] = useState([]);\n  const [projectId, setprojectId] = useState('');\n  const [loading, setloading] = useState(false);\n  useEffect(() => {\n    if (localStorage.getItem('userexist') === true) {\n      setuserexist(true);\n    }\n    if (localStorage.getItem('user')) {\n      setuser(JSON.parse(localStorage.getItem('user')));\n      setuserexist(true);\n    }\n    if (localStorage.getItem('projectId')) {\n      setprojectId(localStorage.getItem('projectId'));\n\n    }\n    if (localStorage.getItem('projectDetails')) {\n      setprojectdata(JSON.parse(localStorage.getItem('projectDetails')));\n    }\n    if (localStorage.getItem('projectName')) {\n      setprojectname(localStorage.getItem('projectName'));\n    }\n  }, [])\n  return (\n    <div className=\"app\">\n      {loading === true ? <Loading /> : null}\n      <UserContext.Provider value={{ user, setuser, setuserexist, projectname, setprojectname, projectdata, setprojectdata, loading, setloading, projectId, setprojectId }} >\n        {userexist === true ?\n          <Router>\n            <Switch>\n              <Route exact path='/' component={Myflowchart} />\n              <Route exact path='/Register' component={Register} />\n              <Route exact path='/myflowcharts' component={Myflowchart} />\n              <Route exact path='/flowchart/:id' component={Drawing} />\n              <Route exact path='/login' component={Login} />\n            </Switch>\n          </Router>\n          :\n          <Router>\n            <Switch>\n              <Route exact path='/' component={Login} />\n              <Route exact path='/Register' component={Register} />\n              <Route exact path='/myflowcharts' component={Login} />\n              <Route exact path='/flowchart/:id' component={Login} />\n              <Route exact path='/login' component={Login} />\n            </Switch>\n          </Router>\n        }\n\n      </UserContext.Provider>\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { HashRouter } from 'react-router-dom';\nimport App from './App';\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}